#!/usr/bin/env bash
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM='xterm-256color';
fi

# Automatically trim long paths in the prompt (requires Bash 4.x)
# PROMPT_DIRTRIM=2

get_git_repository_details() {

    local branchName=""
    local tmp=""
    # Check if the current directory is in a Git repository.
    ! git rev-parse &>/dev/null \
        && return

    # Check if in `.git/` directory (some of the following
    # checks don't make sense/won't work in the `.git` directory).
    [ "$(git rev-parse --is-inside-git-dir)" == "true" ] \
        && return

    # Check for uncommitted changes in the index.
    if ! git diff --quiet --ignore-submodules --cached; then
        tmp="$tmp+";
    fi

    # Check for unstaged changes.
    if ! git diff-files --quiet --ignore-submodules --; then
        tmp="$tmp!";
    fi

    # Check for untracked files.
    if [ -n "$(git ls-files --others --exclude-standard)" ]; then
        tmp="$tmp?";
    fi

    # Check for stashed files.
    if git rev-parse --verify refs/stash &>/dev/null; then
        tmp="$tmp$";
    fi

    [ -n "$tmp" ] \
        && tmp=" [$tmp]"

    branchName="$( printf "%s" "$( git rev-parse --abbrev-ref HEAD 2> /dev/null \
        || git rev-parse --short HEAD 2> /dev/null \
        || printf " (unknown)" )" | tr -d "\n" )"

    printf "%s" " $1$branchName$tmp"
}

bold='';
reset="\e[0m";
black="\e[1;30m";
blue="\e[1;34m";
cyan="\e[1;36m";
green="\e[1;32m";
orange="\e[1;33m";
purple="\e[1;35m";
red="\e[1;31m";
violet="\e[1;35m";
white="\e[1;37m";
yellow="\e[1;33m";

# Highlight when logged in as root
if [[ "${USER}" == "root" ]]; then
	userColor="${red}";
else
	userColor="${orange}";
fi;

# Set terminal prompt
PS1="\[${userColor}\]\u"; # username
PS1+="\[${white}\]@"; # host
PS1+="\[${red}\]\h"; # host
PS1+="\[${white}\]:\A"; # time
PS1+="\[${bold}\] ";
PS1+="\[${blue}\]\w"; # working directory full path
PS1+="\[${green}\]";
PS1+="\$(get_git_repository_details)"; # git branch
PS1+="\n";
PS1+="\[${white}\]$ ";
export PS1;

PS2="\[${yellow}\]â†’ \[${reset}\]";
export PS2;
